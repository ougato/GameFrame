{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\Script\\Core\\Manager\\Event/assets\\Script\\Core\\Manager\\Event\\ViewEvent.js"],"names":["EventNode","require","instance","ViewEvent","cc","Class","statics","getInstance","ctor","m_dictMsgList","getLastEventNode","msgId","scriptNode","hasOwnProperty","scriptList","Utils","isArray","length","getFirstEventNode","toString","getEventNodeIndex","script","index","i","findNode","isNull","getScript","_register1","lastNode","m_objPrevScript","m_objNextScript","push","_register2","msgIdList","register","param1","arguments","param2","isNumber","isObject","_unRegister1","firstNode","nextNode","prevNode","spliceNode","splice","destroy","getNext","_unRegister2","unRegister","onMessageEvent","data","warn","module","exports"],"mappings":"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","file":"ViewEvent.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\Script\\Core\\Manager\\Event","sourcesContent":["/**\r\n * 脚本事件 管理器\r\n * @type {Function}\r\n */\r\n\r\nlet EventNode = require( \"EventNode\" );\r\n\r\n// 实例化对象\r\nlet instance = null;\r\n\r\nlet ViewEvent = cc.Class({\r\n\r\n    /**\r\n     * 静态类\r\n     */\r\n    statics: {\r\n\r\n        /**\r\n         * 获取实例\r\n         * @returns {Function}\r\n         */\r\n        getInstance() {\r\n            if( instance === null ) {\r\n                instance = new ViewEvent();\r\n            }\r\n            return instance;\r\n        },\r\n    },\r\n\r\n    /**\r\n     * 构造\r\n     */\r\n    ctor() {\r\n        // 事件列表\r\n        this.m_dictMsgList = {};\r\n\r\n    },\r\n\r\n    /**\r\n     * 获取最后一个脚本节点\r\n     * @param msgId\r\n     * @returns {*}\r\n     */\r\n    getLastEventNode( msgId ) {\r\n        let scriptNode = null;\r\n        if( this.m_dictMsgList.hasOwnProperty( msgId ) ) {\r\n            let scriptList = this.m_dictMsgList[msgId];\r\n            if( Utils.isArray( scriptList ) && scriptList.length > 0 ) {\r\n                scriptNode = scriptList[scriptList.length-1];\r\n            }\r\n        }\r\n        return scriptNode;\r\n    },\r\n\r\n    /**\r\n     * 获取第一个脚本节点\r\n     * @param msgId\r\n     * @returns {*}\r\n     */\r\n    getFirstEventNode( msgId ) {\r\n        let scriptNode = null;\r\n        if( this.m_dictMsgList.hasOwnProperty( msgId ) ) {\r\n            let scriptList = this.m_dictMsgList[msgId];\r\n            if( Utils.isArray( scriptList ) && scriptList.length > 0 ) {\r\n                scriptNode = scriptList[0];\r\n            }\r\n        }\r\n        msgId.toString();\r\n        return scriptNode;\r\n    },\r\n\r\n    /**\r\n     * 获取脚本节点 在 数组里的下标\r\n     * @param msgId\r\n     * @param script\r\n     * @returns {number}\r\n     */\r\n    getEventNodeIndex( msgId, script ) {\r\n        let index = -1;\r\n        if( this.m_dictMsgList.hasOwnProperty( msgId ) && Utils.isArray( this.m_dictMsgList[msgId] ) ) {\r\n            for( let i = 0; i < this.m_dictMsgList[msgId].length; ++i ) {\r\n                let findNode = this.m_dictMsgList[msgId][i];\r\n                if( !Utils.isNull( findNode ) && findNode.getScript() === script ) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    },\r\n\r\n    /**\r\n     * 内部函数 注册事件_1\r\n     * @param msgId\r\n     * @param scriptNode\r\n     * @private\r\n     */\r\n    _register1( msgId, scriptNode ) {\r\n        if( this.m_dictMsgList.hasOwnProperty( msgId ) && Utils.isArray( this.m_dictMsgList[msgId] ) ) {\r\n            let lastNode = getLastEventNode( msgId );\r\n            if( !Utils.isNull( lastNode ) ) {\r\n                scriptNode.m_objPrevScript = lastNode;\r\n                scriptNode.m_objNextScript = null;\r\n                lastNode.m_objNextScript = scriptNode;\r\n            }\r\n        } else {\r\n            // msgId 在字典中不存在\r\n            this.m_dictMsgList[msgId] = [];\r\n        }\r\n        this.m_dictMsgList[msgId].push( scriptNode );\r\n    },\r\n\r\n    /**\r\n     * 内部函数 注册事件_2\r\n     * @param script\r\n     * @param msgIdList\r\n     * @private\r\n     */\r\n    _register2( script, msgIdList ) {\r\n        for( let i = 0; i < msgIdList.length; ++i ) {\r\n            let scriptNode = new EventNode( script );\r\n            this._register1( msgIdList[i], scriptNode );\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 注册 消息事件\r\n     * （注：通过参数类型来重载注册函数）\r\n     * 一、通过消息ID，注册事件\r\n     * 参数1 number 消息ID\r\n     * 参数2 object 事件节点\r\n     *\r\n     * 二、在脚本对象内，注册多个消息ID\r\n     * 参数1 object 脚本对象\r\n     * 参数2 array 消息ID数组\r\n     */\r\n    register() {\r\n        // 参数\r\n        // [ 0.可变参数 1.可变参数 ]\r\n        let param1 = arguments[0];\r\n        let param2 = arguments[1];\r\n\r\n        if( Utils.isNumber( param1 ) && Utils.isObject( param2 ) ) {\r\n            this._register1( param1, param2 );\r\n        } else if( Utils.isObject( param1 ) && Utils.isArray( param2 ) ) {\r\n            this._register2( param1, param2 );\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 内部函数 删除注册事件_1\r\n     * @param msgId\r\n     * @param script\r\n     * @private\r\n     */\r\n    _unRegister1( msgId, script ) {\r\n        if( this.m_dictMsgList.hasOwnProperty( msgId ) && Utils.isArray( this.m_dictMsgList[msgId] ) ) {\r\n            let firstNode = this.getFirstEventNode( msgId );\r\n            let nextNode = firstNode;\r\n            while( !Utils.isNull( nextNode ) ) {\r\n                if( nextNode.getScript() === script ) {\r\n                    let index = this.getEventNodeIndex( script );\r\n                    if( index >= 0 ) {\r\n                        let prevNode = script.m_objPrevScript;\r\n                        prevNode.m_objNextScript = script.m_objNextScript;\r\n                        let nextNode = script.m_objNextScript;\r\n                        nextNode.m_objPrevScript = script.m_objPrevScript;\r\n                        let spliceNode = this.m_dictMsgList[msgId].splice( index, 1 );\r\n                        spliceNode.destroy();\r\n                    }\r\n                    break;\r\n                }\r\n                nextNode = nextNode.getNext();\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 内部函数 删除注册事件_2\r\n     * @param script\r\n     * @param msgIdList\r\n     * @private\r\n     */\r\n    _unRegister2( script, msgIdList ) {\r\n        for( let i = 0; i < msgIdList.length; ++i ) {\r\n            this._unRegister1( msgIdList[i], script );\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 卸载注册 消息事件\r\n     * （注：通过参数类型来重载注册函数）\r\n     * 一、通过消息ID，注册事件\r\n     * 参数1 number 消息ID\r\n     * 参数2 object 事件节点\r\n     *\r\n     * 二、在脚本对象内，注册多个消息ID\r\n     * 参数1 object 脚本对象\r\n     * 参数2 array 消息ID数组\r\n     */\r\n    unRegister() {\r\n        // 参数\r\n        // [ 0.可变参数 1.可变参数 ]\r\n        let param1 = arguments[0];\r\n        let param2 = arguments[1];\r\n\r\n        if( Utils.isNumber( param1 ) && Utils.isObject( param2 ) ) {\r\n            this._unRegister1( param1, param2 );\r\n        } else if( Utils.isObject( param1 ) && Utils.isArray( param2 ) ) {\r\n            this._unRegister2( param1, param2 );\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 接收 消息 监听函数\r\n     * @param msgId\r\n     * @param data\r\n     */\r\n    onMessageEvent( msgId, data ) {\r\n        if( this.m_dictMsgList.hasOwnProperty( msgId ) ) {\r\n\r\n        } else {\r\n            cc.warn( \"未找到消息 [\" + msgId + \"]\" );\r\n        }\r\n    },\r\n\r\n});\r\n\r\nmodule.exports = ViewEvent;"]}